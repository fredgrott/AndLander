<?xml version="1.0" encoding="ISO-8859-1" ?>
<?xml-stylesheet href="xsl/class.xsl" type="text/xsl"?>
<jcsc>
  <package>rj.tools.jcsc.plugins.intellij</package>
  <class>JCSCResultPanel</class>
  <methods>26</methods>
  <author><![CDATA[Ralph Jocham]]></author>
  <count>2</count>
  <ncss>149</ncss>
  <lines>409</lines>
  <unittestclasses>0</unittestclasses>
  <unittests>0</unittests>
  <violation>
    <rule>
      <name>MaxNumberOfCCNPerMethod</name>
      <severity>4</severity>
      <category>Metrics</category>
    </rule>
    <classname>JCSCRunTableModel</classname>
    <package>rj.tools.jcsc.plugins.intellij</package>
    <line>275</line>
    <column>51</column>
    <message><![CDATA[method declaration 'getValueAt' has a too high CCN (13) - 5 are allowed]]></message>
    <source>C:\cygwin\home\jcsc\src\rj\tools\jcsc\plugins\intellij\JCSCResultPanel.java</source>
  </violation>
  <violation>
    <rule>
      <name>MaxNumberOfArgumentsPerMethod</name>
      <severity>3</severity>
      <category>Method</category>
    </rule>
    <classname>JCSCTableCellRenderer</classname>
    <package>rj.tools.jcsc.plugins.intellij</package>
    <line>354</line>
    <column>73</column>
    <message><![CDATA[method declaration 'getTableCellRendererComponent' has too many arguments - 5 are allowed]]></message>
    <source>C:\cygwin\home\jcsc\src\rj\tools\jcsc\plugins\intellij\JCSCResultPanel.java</source>
  </violation>
  <metric>
    <method>>
      <name>JCSCResultPanel.constructor()</name>
      <line>60</line>
      <column>11</column>
      <ncss>3</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.startParsing()</name>
      <line>70</line>
      <column>29</column>
      <ncss>2</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.endParsing()</name>
      <line>78</line>
      <column>27</column>
      <ncss>2</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.setViolations()</name>
      <line>88</line>
      <column>52</column>
      <ncss>5</ncss>
      <ccn>2</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.zeroViolationsFound()</name>
      <line>99</line>
      <column>37</column>
      <ncss>1</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.initUI()</name>
      <line>103</line>
      <column>24</column>
      <ncss>11</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.createResultsTable()</name>
      <line>120</line>
      <column>38</column>
      <ncss>15</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.selectLine()</name>
      <line>141</line>
      <column>35</column>
      <ncss>2</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.setColumnWidth()</name>
      <line>146</line>
      <column>61</column>
      <ncss>4</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.setFailVioNCSSRatio()</name>
      <line>158</line>
      <column>48</column>
      <ncss>2</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.setFailSeverity()</name>
      <line>168</line>
      <column>44</column>
      <ncss>2</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.setNCSSCount()</name>
      <line>178</line>
      <column>38</column>
      <ncss>2</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.JCSCRunTableModel.setViolations()</name>
      <line>192</line>
      <column>55</column>
      <ncss>3</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.JCSCRunTableModel.isCellEditable()</name>
      <line>205</line>
      <column>54</column>
      <ncss>8</ncss>
      <ccn>3</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.JCSCRunTableModel.isCellEditable()</name>
      <line>230</line>
      <column>56</column>
      <ncss>3</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.JCSCRunTableModel.getColumnName()</name>
      <line>243</line>
      <column>45</column>
      <ncss>2</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.JCSCRunTableModel.getColumnCount()</name>
      <line>253</line>
      <column>33</column>
      <ncss>2</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.JCSCRunTableModel.getRowCount()</name>
      <line>263</line>
      <column>30</column>
      <ncss>2</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.JCSCRunTableModel.getValueAt()</name>
      <line>275</line>
      <column>51</column>
      <ncss>17</ncss>
      <ccn>13</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.JCSCTableCellEditor.getTableCellEditorComponent()</name>
      <line>311</line>
      <column>106</column>
      <ncss>2</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.JCSCTableCellEditor.getCellEditorValue()</name>
      <line>321</line>
      <column>40</column>
      <ncss>2</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.JCSCTableCellEditor.isCellEditable()</name>
      <line>332</line>
      <column>54</column>
      <ncss>2</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.JCSCTableCellRenderer.getTableCellRendererComponent()</name>
      <line>354</line>
      <column>73</column>
      <ncss>5</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.JCSCTableCellRenderer.isNumberEven()</name>
      <line>366</line>
      <column>47</column>
      <ncss>2</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.JCSCTableCellRenderer.setBackground()</name>
      <line>371</line>
      <column>74</column>
      <ncss>11</ncss>
      <ccn>4</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>JCSCResultPanel.JCSCTableCellRenderer.setAlignment()</name>
      <line>395</line>
      <column>73</column>
      <ncss>7</ncss>
      <ccn>3</ccn>
    </method>
  </metric>
</jcsc>
